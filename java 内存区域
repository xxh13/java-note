java 内存区域

1.运行时数据区域

1.1 程序计数器(线程私有)
    内存空间比较小，通过改变计数器的值来决定下一条执行指令，每个线程都有自己独立的程序计数器(多线程)，执行native方法，程序计数器为空。
    这是为一个没有内存溢出情况的区域。
1.2 java虚拟机栈(线程私有)
    虚拟机栈描述的是java方法的内存模型，每个方法在执行时都会创建一个栈帧(局部变量，操作数栈，动态链接，方法出口)
1.3 本地方法栈
    java的native方法
1.4 java堆(所有线程共享)
    存放java对象实例，是垃圾回收的主要区域。可以划分出多个线程私有的分配缓存区。java堆可以出去物理上不连续的内存空间，只要逻辑上连续的
    就可以。
1.5 方法区(线程共享)
    存储已被虚拟机加载的类信息，常量，静态变量，即使编译器编译后的代码等数据
1.6 运行常量池
    运行常量池是方法区的一部分，存放编译器生成的各种字面量和符号引用。翻译出的直接饮用也存储在运行时常量池。
1.7 直接内存
    直接内存并不是虚拟机运行数据区的一部分，也不是java虚拟机规范中定义的内存区域。
    
    
