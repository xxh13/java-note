对象探秘

1.对象的创建
    1.检查这个指令参数是否能够在常量池定位到一个类的符号引用，并检查这个指令是否被加载，解析，初始化过。如果没有先执行初始化过程
    2.为新生对象分配内存
        如果java堆内存是规整的，那么采用移动指针的方式来分配新内存。
        如果java堆内存不是规整的，虚拟机需要维护一个内存块使用列表，记录内存块的使用情况
        在分配的时候需要考虑到同步问题，因为内存的分配是一个非常频繁的操作，一般有两种凡是来同步，第一种是使用乐观锁CAS来保证操作原子性，
        第二种使用给每个线程在java堆上预先分配一小块内存，称为本地线程分配缓冲。
    3.虚拟机对对象进行必要的设置
      元数据信息，对象的哈希码，对象的GC分代年龄
    4.初始化对象

2.对象的内存布局
    对象的布局分为3部分：对象头，实例数据，对齐填充
        对象头：分为2部分，第一部分用于存储对象自身的运行时数据，如哈希码，GC分代年龄，锁状态标志，线程持有的锁，偏向线程的Id，偏向时间戳
        第二部分是类型指针，即对象指向他的类元数据的指针虚拟机通过这个指针来确定这个对象是哪个对象的实例。此外当对象是数组时，还需要保
        存一个数组长度的值
    
        实例数据：保存程序中所定义的各种类型的字段内容，包括从父类型中继承下来的已经子类型中定义的。
        
        对其填充：并不是必然存在的，仅仅起着占位符的作用。
  
3.对象的定位访问
    使用句柄访问：java堆中会划分出一块内存来作为句柄池，reference中储存的就是对象的句柄地址
    直接访问：reference中存储的是对象地址。
